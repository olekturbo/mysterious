version: '3.8'

services:
  mysterious:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - example.env
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - air-cache:/go

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3316:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  spamapi:
    build:
      context: ./trainer
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped

volumes:
  redis-data:
  mysql-data:
  air-cache:


